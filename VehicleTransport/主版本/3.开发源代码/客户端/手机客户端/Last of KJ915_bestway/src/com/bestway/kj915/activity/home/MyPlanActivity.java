package com.bestway.kj915.activity.home;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import android.app.AlertDialog;import android.app.AlertDialog.Builder;import android.content.DialogInterface;import android.content.DialogInterface.OnClickListener;import android.content.Intent;import android.graphics.Color;import android.media.MediaPlayer;import android.os.Bundle;import android.os.SystemClock;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.BaseAdapter;import android.widget.TextView;import android.widget.Toast;import com.bestway.kj915.GlobleFields;import com.bestway.kj915.R;import com.bestway.kj915.activity.BasicTitleActivity;import com.bestway.kj915.afinalnet.CommonXmlParser;import com.bestway.kj915.afinalnet.FinalNClient;import com.bestway.kj915.afinalnet.NetCallback;import com.bestway.kj915.custom.refreshlistview.interf.OnRefreshListener;import com.bestway.kj915.custom.refreshlistview.view.RefreshListView;import com.bestway.kj915.dao.CommonDbUtiles;import com.bestway.kj915.domain.m_Plan;import com.bestway.kj915.domain.reflect.m_Department;import com.bestway.kj915.domain.reflect.m_MaterielType;import com.bestway.kj915.domain.reflect.m_Person;import com.bestway.kj915.domain.req.ReqPlanDetail;import com.bestway.kj915.domain.req.load.LoadContainer;import com.bestway.kj915.domain.req.load.ReqLoad;import com.bestway.kj915.domain.req.load.m_Plan_Load;import com.bestway.kj915.domain.res.plan.OutGetPlanDetailModel;import com.bestway.kj915.domain.res.plan.m_Apply;import com.bestway.kj915.domain.res.plan.m_Plan_ApplyMaterie;import com.bestway.kj915.domain.res.plan.m_Plan_ApplyVehicle;import com.bestway.kj915.domain.res.plan.m_Plan_CheckVehicle;import com.bestway.kj915.enumation.EnumFlowTypePath;import com.bestway.kj915.utils.TimerUtils;/** * 显示所有按照条件查询的运单号列表 *  * @author gaga *  */public class MyPlanActivity extends BasicTitleActivity {	/**	 * 每次加载指定的数据量	 */	private int perPageSize = 2;	/**	 * 数据集合	 */	private List<m_Plan> dataList_Plan;	private List<m_Apply> dataList_Apply;	private List<m_Plan_ApplyMaterie> dataList_ApplyMaterie;	private List<m_Plan_ApplyVehicle> dataList_ApplyVehicle;	HashMap<Integer, m_Apply> map_Apply;	HashMap<Integer, m_Plan_ApplyMaterie> map_ApplyMaterie;	private HashMap<Integer, m_Plan_ApplyVehicle> map_ApplyVehicle;	private List<m_Plan_CheckVehicle> dataList_CheckVehicle;	private HashMap<Integer, m_Plan_CheckVehicle> map_CheckVehicle;	/**	 * 当前已有的数据量	 */	private int loadNumber = 0;// 已加载的运单量	/**	 * 查询条件封装的消息	 */	@Override	public void doVarious() {		title_text_view.setVisibility(View.VISIBLE);		title_text_view.setText("选择装车运单");	}	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_load_vehicles_query_waybill_result);		final RefreshListView mListView = (RefreshListView) findViewById(R.id.refreshlistview);		dataList_Plan = new ArrayList<m_Plan>();		dataList_Apply = new ArrayList<m_Apply>();		final MyAdapter mAdapter = new MyAdapter();		FinalNClient client = FinalNClient.getInstance();		ReqPlanDetail detail = new ReqPlanDetail(null, 0, perPageSize,				GlobleFields.UserID);		detail.IsApplyDepartment = true;		client.sendMessage(detail, new NetCallback() {			@Override			public String getCmdType() {				return NetCallback.Data_GetPlanDetail;			}			@Override			public void doPrevious() {			}			@Override			public void onResult(String result) {			}			@Override			public void onResult(String inner, boolean Result) {				System.out.println(inner);			}			@Override			public void onResult(String entireXml, String inner, boolean Result) {			}		});		mListView.setOnRefreshListener(new OnRefreshListener() {			@Override			public void onLoadingMore() {				MediaPlayer mp = MediaPlayer.create(MyPlanActivity.this,						R.raw.xiala);				try {					mp.prepare();				} catch (Exception e) {					e.printStackTrace();				}				mp.start();				FinalNClient client = FinalNClient.getInstance();				client.sendMessage(						new ReqPlanDetail(EnumFlowTypePath.Load.name(),								loadNumber, perPageSize, GlobleFields.UserID),						new NetCallback() {							@Override							public String getCmdType() {								return NetCallback.Data_GetPlanDetail;							}							@Override							public void doPrevious() {							}							@Override							public void onResult(String result) {							}							@Override							public void onResult(String inner, boolean Result) {								SystemClock.sleep(500);								System.out.println(inner);								OutGetPlanDetailModel model = (OutGetPlanDetailModel) CommonXmlParser										.parserXml(inner,												new OutGetPlanDetailModel());							}							@Override							public void onResult(String entireXml,									String inner, boolean Result) {							}						});			}			@Override			public void onDownPullRefresh() {				SystemClock.sleep(500);				Toast.makeText(MyPlanActivity.this, "已经是最新数据", 0).show();				mAdapter.notifyDataSetChanged();				mListView.hideHeaderView();			}		});		/**		 * 设置mListView子条目的点击事件		 */		mListView.setOnItemClickListener(new OnItemClickListener() {			@Override			public void onItemClick(AdapterView<?> parent, View view,					int position, long id) {				// 这个地方是为了解决listView下拉的时候出现的问题，避免下拉过程点击了				if (mListView.headerViewCurrentState == 0						&& mListView.diff == 0) {					mListView.diff = 0;					/**					 * 因为有头布局所以要减去1					 */					m_Plan plan = dataList_Plan.get(position - 1);					final String waybill_id = plan.vc_PlanCode;					// 将当前处理的运单详情储存起来					GlobleFields.CurrentPlan = plan;					Builder builder = new AlertDialog.Builder(							MyPlanActivity.this);					builder.setTitle("运单信息详情");					builder.setMessage("运单号    ：" + plan.vc_PlanCode + "\n"							+ "声请人    ：" + plan.ApplyID);					builder.setNegativeButton("确定", new OnClickListener() {						public void onClick(DialogInterface dialog, int which) {							dialog.dismiss();							// 初始化消息发送请求							ReqLoad load = new ReqLoad();							LoadContainer container = new LoadContainer();							List<m_Plan_Load> list = new ArrayList<m_Plan_Load>();							container.list = list;							load.ListM_Plan_Load = container;							// *************							load.AddressID = 0;							load.DepartmentID = 0;							load.DateTime = TimerUtils.getTime();							// *************							load.UserID = GlobleFields.UserID;							load.PlanID = GlobleFields.CurrentPlan.ID;							// load.PlanID = 111;							GlobleFields.reqLoad = load;							Intent data = new Intent(									"com.bestway.kj915.activity.home.loadvehilce.LoadNFCActivity");							startActivity(data);							finish();						}					});					builder.setPositiveButton("取消", new OnClickListener() {						@Override						public void onClick(DialogInterface dialog, int which) {							dialog.dismiss();							dialog.dismiss();							;						}					});					builder.show();				}			}		});	}	class MyAdapter extends BaseAdapter {		@Override		public int getCount() {			return dataList_Plan.size();		}				@Override		public View getView(int position, View arg1, ViewGroup arg2) {			return null;		}		@Override		public Object getItem(int arg0) {			return null;		}		@Override		public long getItemId(int arg0) {			return 0;		}	}}